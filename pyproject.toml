[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tw-scrapper"
version = "1.0.0"
description = "Job Link Extraction and Analysis Pipeline"
authors = [{ name = "Ronald Rodriguez", email = "rodruizronald@gmail.com" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.12"
dependencies = [
    "playwright~=1.51.0",
    "openai>=1.75.0",
    "python-dotenv~=1.1.0",
    "loguru~=0.7.0",
    "prefect~=3.4.14",
    "PyYAML~=6.0.0",
    "pymongo~=4.10.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.12.9",
    "mypy>=1.17.0",
    "pre-commit>=4.3.0",
    "types-PyYAML~=6.0.12",
    "yamllint>=1.37.1",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["parsers*", "services*", "web_parser*", "tools*"]

# ===== RUFF (Linting & Formatting) =====
[tool.ruff]
line-length = 88
target-version = "py312"
src = ["parsers", "services", "web_parser", "tools"]

# Exclude common directories
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
# Enable specific rule sets (more controlled than "ALL")
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
    "TC",  # flake8-type-checking
    "RUF", # Ruff-specific rules
    "PL",  # Pylint
    "Q",   # flake8-quotes
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "DTZ", # flake8-datetimez
    "ERA", # eradicate (commented-out code)
    "PGH", # pygrep-hooks
]

ignore = [
    "E501",    # Line length (formatter handles this)
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
    "SIM108",  # Use ternary operator (sometimes less readable)
    "TC003",   # Move imports into type-checking block
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["scripts", "parsers", "services", "web_parser", "tools"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"] # Unused imports in init files

[tool.ruff.format]
# Format like Black
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# ===== MYPY (Type Checking - Ruff doesn't replace this) =====
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
show_error_codes = true
exclude = ["venv/", ".venv/", "build/", "dist/"]
